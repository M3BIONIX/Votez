const fs = require('fs');
const path = require('path');

// Read .env.local file
const envPath = path.join(__dirname, '..', '.env.local');
let envContent = '';

try {
  envContent = fs.readFileSync(envPath, 'utf-8');
} catch (error) {
  console.error('Error reading .env.local file:', error.message);
  process.exit(1);
}

// Parse environment variables
const envVars = {};
const lines = envContent.split('\n');

lines.forEach((line) => {
  line = line.trim();
  // Skip comments and empty lines
  if (line && !line.startsWith('#')) {
    const [key, ...valueParts] = line.split('=');
    const value = valueParts.join('=');
    envVars[key] = value;
  }
});

// Generate TypeScript file
const tsContent = `// This file is auto-generated by scripts/generate-env-config.js
// Do not edit this file directly

export const env = {
${Object.keys(envVars)
  .map((key) => `  ${key}: '${envVars[key]}',`)
  .join('\n')}
} as const;

export type EnvConfig = typeof env;
`;

// Write to lib/env-config.ts
const outputPath = path.join(__dirname, '..', 'lib', 'env-config.ts');
fs.writeFileSync(outputPath, tsContent, 'utf-8');

console.log('âœ“ Generated lib/env-config.ts from .env.local');

